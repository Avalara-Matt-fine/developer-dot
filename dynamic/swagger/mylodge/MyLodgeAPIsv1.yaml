swagger: '2.0'
info:
  version: v1.2
  title: Avalara MyLodgeTax API
  termsOfService: 'https://mylodgetax.avalara.com/legal'
  description: "Welcome to the MyLodgeTax Public API page, supporting the Avalara MyLodgeTax
    product, which provides sales and lodging tax compliance for short-term
    property rentals.  Find out more about the MyLodgeTax product here:
    http://www.mylodgetax.com


    The API defined here facilitates data exchange between Avalara MyLodgeTax
    and third-party applications.  Contact MyLodgeTax for information on
    becoming a MyLodgeTax partner:
    https://www.avalara.com/mylodgetax/en/contact-us.html

    # Authorization

    The Authorization header must be provided to use any of the endpoints
    defined in this document.  This header must be in the following format:


    `Authorization: Bearer [apiKey]`


    where

    * _apiKey_ is a valid, active API key issued by the Avalara MyLodgeTax
    Partner Manager application

    # Functional Overview

    In order to exchange tax data with the Avalara MyLodgeTax system, the caller
    must initiate the onboarding process of a new customer.  This requires a
    POST to the _partnerleads_ endpoint, with necessary information about the
    customer and any _locations_ (rental properties) they wish to be managed by
    Avalara MyLodgeTax.  On successful creation of the partnerLeads resource, a
    link to a prefilled shopping cart page will be returned in the response. 
    Upon navigating to this link via web browser, the customer will be presented
    with a prefilled shopping cart that includes the information previously
    posted to the _partnerleads_ endpoint.  To complete the signup process, the
    customer will need to supply minimal information on this web page, including
    a new account password and payment information for their new Avalara
    MyLodgeTax account.


    To determine whether a partnerLead has created an account using the
    partnerLead link, along with the setup status of all _locations_ passed in
    the body of the partnerleads POST, the calling system should periodically
    examine the _Locations_ resource.  Customers and locations are referenced
    via ids passed in the partnerleads request.  A **200** response indicates
    that the customer has created a new Avalara MyLodgeTax account, while a
    **404** response means the account has not yet been created by the
    customer.  Further information can be read from the locations response body
    to determine the setup status of each location provided in the partnerleads
    request.


    After a tax rate has been assigned to a location (location has a status of
    _LicenseSetup_ or _Active_), tax rate information can be read for the
    location.  High-level tax rate information for locations can be accessed via
    the _ownertaxsummaries_ resource, while detailed tax rate information can be
    accessed via the _ownertaxdetails_ resource.

    ## Onboarding

    Onboarding functionality is initiated via the _partnerleads_ endpoint. This
    endpoint facilitates quick and easy signup of potential MyLodgeTax customers
    (leads) by providing a link to a prefilled shopping cart page where the user
    can complete the signup process.  Partners referring leads that complete
    signup will automatically receive access to pull and push data from/to the
    customer's Avalara MyLodgeTax account.  Partners are encouraged to present
    this link to their customers after they have opted in to share their
    information with Avalara MyLodgeTax via this endpoint.  Avalara MyLodgeTax
    will also contact the customer via marketing emails and will include this
    link for convenient signup.


    ## Tax Rates

    Tax Rates are available to partners that have onboarded customers into the
    Avalara MyLodgeTax system, after the customer has created an account.  After
    a customer's location has been assigned a tax rate, and while the location
    maintains an active subscription, daily tax rate information will be
    available via the _ownertaxsummaries_ and _ownertaxdetails_ endpoints.  Tax
    rate information returned from these endpoints represents the total tax rate
    owed by the owner, for:

      * _Direct_ listings (where the customer is responsible for collecting and remitting all taxes due to booking the location through their own means) 
      * _Marketplace_ listings (where the customer is only responsible for taxes **not** collected and remitted by the marketplace responsible for the booking).


    Tax rates for the following marketplaces are currently supported:


    * Airbnb

    * FlipKey

    * HomeAway

    ## Revenue

    The Revenue API provides an easy mechanism for the management
    of a customer's revenue transactions without having to login directly
    to the MyLodge website. In addition to allowing partners to directly report lodging sales for a customer's rental property, a revenue transaction can also be updated, deleted, and previously uploaded transaction details can be retrieved.

    ## API Rate Limits

    All endpoints will be rate limited, allowing each partner to make up to 500
    requests per minute across all endpoints."

        
host: mylodgetaxapi-sbx.avalara.net
schemes:
  - https
definitions:
  PostPartnerLeadsRequest:
    type: object
    description: Request body definition for call to POST /v1/partnerleads
    properties:
      customer:
        $ref: '#/definitions/Customer'
      locations:
        $ref: '#/definitions/ArrayOfOnboardingLocations'
  Customer:
    type: object
    description: Represents a customer or potential customer.  When used as input, all fields are required.
    properties:
      customerId:
        type: string
        description: Unique, partner-specific identifier of the customer as defined in the calling system
      firstName:
        type: string
        description: Customer's first name (given name)
      lastName:
        type: string
        description: Customer's last name (surname)
      email:
        type: string
        description: Customer's email address; will be used for MyLodge account username when signup is completed.
      phoneNumber:
        type: string
        description: Customer's phone number
      billingAddress:
        $ref: '#/definitions/Address'
  Address:
    description: Represents a physical address.  When used as input, all fields are required -except- addressLine2
    type: object
    properties:
      addressLine1:
        type: string
        description: First line of a physical address
      addressLine2:
        type: string
        description: Second line of a physical address
      city:
        type: string
        description: City of a physical address
      state:
        type: string
        description: State or province of a physical address
      country:
        type: string
        description: Country of a physical address
      postalCode:
        type: string
        description: Postal code of a physical address
  ArrayOfOnboardingLocations:
    type: array
    description: Array of Location objects
    items:
      $ref: '#/definitions/OnboardingLocation'
  OnboardingLocation:
    type: object
    description: "Represents a location being onboarded. When used as input, the address for location must currently be in the United States (country: us), and the
      stateProvince of the address must be one that matches list returned from /v1/countries/us/stateprovinces response"
    properties:
      locationId:
        type: string
        description: Unique, partner-specific identifier of the location as defined in the calling system
      nickname:
        type: string
        description: Short name of the location
      address:
        $ref: '#/definitions/Address'
  
  ErrorResponse:
    type: object
    description: Generic response message containing error detail
    properties:
      message:
        type: string
  PostPartnerLeadsResponse:
    type: object
    description: Representation of a successful response from a POST /v1/partnerleads operation
    properties:
      registerLink:
        type: string
  PostPartnerLeadsResponseErrorDataExists:
    type: object
    description: Error response returned when customer or location with given id already exists.
    properties:
      message:
        type: string
      addPropertyLink:
        type: string
        description: Link to Avalara MyLodgeTax application page where user can create additional properties in existing account.
  GetStateProvincesResponse:
    type: object
    description: Representation of a successful response from a GET /v1/countries/us/stateprovinces
    properties:
      stateProvinces:
        $ref: '#/definitions/ArrayOfStateProvinces'
  ArrayOfStateProvinces:
    type: array
    description: Array of StateProvince objects
    items:
      $ref: '#/definitions/StateProvince'
  StateProvince:
    type: object
    description: Representation of a state or province within a country
    properties:
      name:
        type: string
      shortName:
        type: string
  GetCustomerLocationsResponse:
    type: object
    description: Representation of a successful response from a GET /v1/customers/&#123;customerId&#125;/locations
    properties:
      locations:
        $ref: '#/definitions/ArrayOfLocations'
  ArrayOfLocations:
    type: array
    description: Array of Location objects
    items:
      $ref: '#/definitions/Location'
  Location:
    type: object
    description: Representation of a location
    properties:
      name:
        type: string
      id:
        type: string
      status:
        type: string
        enum:
          - TaxSetup
          - LicenseSetup
          - Active
          - Cancelled
  GetOwnerTaxSummariesResponse:
    type: object
    description: Representation of a successful response from a GET /v1/locations/&#123;locationId&#125;/ownertaxsummaries
    properties:
      taxSummaries:
        $ref: '#/definitions/ArrayOfTaxSummaries'
  ArrayOfTaxSummaries:
    type: array
    description: Array of Tax Summary objects
    items:
      $ref: '#/definitions/TaxSummary'
  TaxSummary:
    type: object
    description: A tax summary for one marketplace (or a _direct_ marketplace)
    properties:
      marketplace:
        type: string
        enum:
          - Direct
          - Airbnb
          - FlipKey
          - HomeAway
      percentEffectiveRate:
        type: number
      fixedTaxes:
        $ref: '#/definitions/ArrayOfFixedTaxSummaries'
  ArrayOfFixedTaxSummaries:
    type: array
    description: Array of Fixed Tax Summary objects
    items:
      $ref: '#/definitions/FixedTaxSummary'
  FixedTaxSummary:
    type: object
    description: Total of fixed taxes for a given unit of measure (e.g. nightly taxes)
    properties:
      totalAmount:
        type: number
        description: Total fixed amount to collect in local currency, for the given unit of measure
      unitOfMeasure:
        type: string
        enum:
          - Nights
        description: Unit of measure for the fixed tax
  GetOwnerTaxDetailsResponse:
    type: object
    description: Representation of a successful response from a GET /v1/locations/&#123;locationId&#125;/ownertaxdetails
    properties:
      taxSummaries:
        $ref: '#/definitions/ArrayOfTaxDetails'
  ArrayOfTaxDetails:
    type: array
    description: Array of Tax Detail objects
    items:
      $ref: '#/definitions/TaxDetail'
  TaxDetail:
    type: object
    description: A tax detail for one marketplace (or a _direct_ marketplace)
    properties:
      marketplace:
        type: string
        enum:
          - Direct
          - Airbnb
          - FlipKey
          - HomeAway
      percentTaxes:
        $ref: '#/definitions/ArrayOfPercentTaxDetails'
      fixedTaxes:
        $ref: '#/definitions/ArrayOfFixedTaxDetails'
  ArrayOfPercentTaxDetails:
    type: array
    description: Array of Percent Tax Detail objects
    items:
      $ref: '#/definitions/PercentTaxDetail'
  ArrayOfFixedTaxDetails:
    type: array
    description: Array of Percent Tax Detail objects
    items:
      $ref: '#/definitions/FixedTaxDetail'
  PercentTaxDetail:
    type: object
    description: A tax detail representing percentage-based taxes
    properties:
      jurisdiction:
        type: string
        description: Name of taxing jurisdiction
      name:
        type: string
        description: Name of tax rate
      rate:
        type: number
        description: 'Percent rate, represented as a decimal'
      taxable:
        type: boolean
        description: Flag indicating whether this tax rate can be taxed by other taxes
  FixedTaxDetail:
    type: object
    description: 'A tax detail representing fixed taxes, collected in local currency'
    properties:
      jurisdiction:
        type: string
        description: Name of taxing jurisdiction
      name:
        type: string
        description: Name of tax rate
      unitOfMeasure:
        type: string
        enum:
          - Nights
      amount:
        type: number
        description: 'Tax amount to collect per unit, in local currency'
      taxable:
        type: boolean
        description: Flag indicating whether this tax can be taxed by other taxes
  PutRevenueTransactionsRequest:
    type: object
    description: Request body definition for call to PUT /v1/locations/&#123;locationid&#125;/revenuetransactions/&#123;transactionid&#125;. The fields 
      'memo' and 'sourceMarketplace' are optional.
    properties:
      transactionDate:
        type: string
        description: The date that the revenue is being reported for. Expected date format is 'YYYY-MM-DD'.
      totalRevenue:
        type: number
        description: The total revenue amount being reported.  Tax should not be included in this value.
      exemptRevenue:
        type: number
        description: The amount of the totalRevenue that is exempt from being taxed.
      totalNights:
        type: number
        description: The number of nights that the revenue was collected for.
      exemptNights:
        type: number
        description: The number of the totalNights that are exempt from being taxed.
      memo:
        type: string
        description: Memo field that describes the transaction data.  This is what the customer will see in the Avalara MyLodgeTax application.  Although optional, partners are strongly encouraged to provide a meaningful description for the customer's reference.
      sourceMarketplace:
        type: string
        description: The marketplace that the transaction applies to (e.g. AirbnB, 
          HomeAway, etc). This field does not need to be supplied from partners who represent a single marketplace; sourceMarketplace will be inferred from your API key.
          
          For partners that list on multiple third-party marketplaces, this field is required, so that the correct customer-owed tax can be computed, based on the tax that the given marketplace is known to collect and remit.
  GetRevenueTransactionsResponse:
    type: object
    description: The transaction data that corresponds to the provided locationid and 
      transactionid.
    properties:
      id:
        type: string
        description: The unique identifier for the transaction data. Will always be the 
          same as what was input in the 'transactionid' field in the url.
      date:
        type: string
        description: The date that the revenue was reported for. Format will be 
          'YYYY-MM-DD'.
      totalRevenue:
        type: number
        description: The total revenue amount that was reported.
      exemptRevenue:
        type: number
        description: The amount of the totalRevenue that is exempt from being taxed.
      totalNights:
        type: number
        description: The number of nights that the revenue was collected to account for.
      exemptNights:
        type: number
        description: The number of the totalNights that are exempt from being taxed.
      memo:
        type: string
        description: Block of text that describes the transaction data.
      sourceMarketplace:
        type: string
        description: The marketplace that the transaction applies to (e.g. AirBnB, 
          HomeAway, etc). If this revenue does not apply to a specific
          marketplace, it will be 'null'.
paths:
  /v1/partnerleads:
    post:
      tags:
        - Onboarding
      summary: Creates a new partner lead with the given lead information and returns a
        link where the lead can complete their Avalara MyLodgeTax account
        creation.
      description: The partnerleads endpoint receives information about the potential
        customer and one or more locations, and securely stores information
        received in this request.  **Unique** customer and location identifiers
        must be provided by the calling system in the request body. For leads
        with an email address not already associated with an account in the
        Avalara MyLodgeTax system, the response will contain a hyperlink that
        uniquely identifies the given request.  The hyperlink can be used by the
        lead or calling application to display a webpage where the user can
        complete the Avalara MyLodgeTax account creation process.

        For leads that already exist in the Avalara MyLodgeTax system (based on
        email address), a link will be returned that will direct the existing
        customer to create additional properties in the Avalara MyLodgeTax
        application.
      consumes:
        - application/json
      parameters:
        - in: body
          name: request
          schema:
            $ref: '#/definitions/PostPartnerLeadsRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PostPartnerLeadsResponse'
          examples: "Register link for customer to complete signup: 
              {
                \"registerLink\": \"https://cart.mylodgetax.avalara.com/home/partners/17fddba083a755760503fe938ce0z803f98ced4d5b9253da952adc90ec550ca4/\"
              }"
        '400':
          description: 'Bad request: check response body message for details'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Username (email) already associated with an Avalara MyLodgeTax
            account, or locationId for calling partner has already been created.
          schema:
            $ref: '#/definitions/PostPartnerLeadsResponseErrorDataExists'
          examples:
            "Account exists: 
              {
                \"message\": \"Account already exists\",
                \"addPropertyLink\" : \"https://app.mylodgetax.avalara.com/properties/add\"
              }
            Partner locationId exists:
              {
                \"message\": \"Location mapping already exists for partner\"
              }"
        '422':
          description: "Invalid message body contents: check response body message for
            details"
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Exceeded API Rate Limits
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
  '/v1/country/{country}/stateprovinces':
    get:
      tags:
        - Onboarding
      summary: Returns a collection of supported states and provinces for the given
        country
      parameters:
        - name: country
          description: Country for which to return collection of supported states and
            provinces.  United States ('us') is the only country supported at
            this time.
          in: path
          required: true
          type: string
          enum:
            - us
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetStateProvincesResponse'
          examples:
            application/json:
              stateProvinces:
                - name: Alabama
                  shortName: AL
                - name: Alaska
                  shortName: AK
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Country code not supported
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Exceeded API Rate Limits
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
  '/v1/customers/{customerid}/locations':
    get:
      tags:
        - Customer Information
      summary: Provides access to location information for a given customer.
      description: The locations endpoint returns status information about all locations
        defined for a customer.
      consumes:
        - application/json
      parameters:
        - name: customerid
          in: path
          required: true
          type: string
          description: Unique, partner-specific customer identifier assigned when posting a
            partnerLead (_customerId_).
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetCustomerLocationsResponse'
        '400':
          description: 'Bad request: check response body message for details'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Customer Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Exceeded API Rate Limits
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
  '/v1/locations/{locationid}/ownertaxsummaries':
    get:
      tags:
        - Tax Rate
      summary: Provides summarized tax responsibilities for the owner of the given
        location, by marketplace. Tax rate quotes are provided for today.
      description: The ownertaxsummaries endpoint returns summarized tax rate information
        for taxes owed by the location (property) owner, based on the booking
        platform.  The Full tax rate responsibility for the owner is represented
        by the _direct_ marketplace.  Requesting rates for a specific booking
        marketplace will result in a response containing the balance of taxes
        the owner is responsible to collect and remit.  This represents the
        inverse of any taxes the booking marketplace has committed to collecting
        and remitting.  If no marketplaces are specified in the query string,
        the response will always contain data for the _direct_ marketplace, plus
        any rate information for marketplaces that differ from the full rate set
        represented by the _direct_ marketplace.

        The total percentage rate is returned as an effective rate.  Meaning, if
        any component percentage rate for the location is taxable, the
        _percentEffectiveRate_ will represent a total that includes compounded
        tax on top of any taxable base.
      consumes:
        - application/json
      parameters:
        - name: locationid
          in: path
          required: true
          type: string
          description: Unique location identifier assigned when posting a partnerLead
            (_locationId_).
        - name: effectivedate
          in: query
          required: true
          type: string
          description: Effective date for rate lookup.  Given date must be within +/- 1 day
            of current calendar date in U.S. Pacific time zone at the time the
            request is made.  Expected date format is 'YYYY-MM-DD'
        - name: marketplace
          in: query
          required: false
          type: string
          description: 0...n marketplace parameters may be passed, which may include
            _direct_.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetOwnerTaxSummariesResponse'
        '400':
          description: 'Bad request: check response body message for details'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Invalid Effective Date or Location Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: 'Tax rate not available for location, due to location status.'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Exceeded API Rate Limits
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
  '/v1/locations/{locationid}/ownertaxdetails':
    get:
      tags:
        - Tax Rate
      summary: Provides detailed tax responsibilities for the owner of the given
        location, by marketplace. Tax rate quotes are provided for today.
      description: The ownertaxdetails endpoint returns detailed tax rate information for
        taxes owed by the location (property) owner, based on the rental
        platform.  The Full tax rate responsibility for the owner is represented
        by the _direct_ marketplace.  Requesting rates for a specific
        marketplace will result in a response containing the balance of taxes
        the owner is responsible to collect and remit.  This represents the
        inverse of any taxes the marketplace has committed to collecting and
        remitting.  If no marketplaces are specified in the query string, the
        response will always contain data for the _direct_ marketplace, plus any
        rate information for marketplaces that differ from the full rate set
        represented by the _direct_ marketplace.

        Unlike _ownertaxsummaries_, this endpoint will not perform any
        calculations and therefore, will not compound taxable tax.
      consumes:
        - application/json
      parameters:
        - name: locationid
          in: path
          required: true
          type: string
          description: Unique location identifier assigned when posting a partnerLead
            (_locationId_).
        - name: effectivedate
          in: query
          required: true
          type: string
          description: Effective date for rate lookup.  Given date must be within +/- 1 day
            of current calendar date as defined in U.S. Pacific time zone. 
            Expected date format is 'YYYY-MM-DD'
        - name: marketplace
          in: query
          required: false
          type: string
          description: 0...n marketplace parameters may be included.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetOwnerTaxDetailsResponse'
        '400':
          description: 'Bad request: check response body message for details'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Location Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: 'Tax rate not available for location, due to location status.'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Exceeded API Rate Limits
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
  '/v1/locations/{locationid}/revenuetransactions/{transactionid}':
    put:
      tags:
        - Revenue
      summary: Creates or updates revenue information for a given location, stored by 
        the provided transaction id.
      description: "The PUT operation of the revenuetransactions endpoint allows for the 
        submittal of revenue information for a given location, to be stored 
        under the provided transaction id.

        If the provided transaction id already exists, this operation will 
        overwrite the previously submitted data.
        
        Transaction dates will only be accepted for the current month, or for the previous calendar month, through 23:59:59 on the second day of the month, U.S. Pacific Time.  Tax returns are filed based on transaction date, and tax monies will be debited from the customer's account during the month the tax return will be filed.  See _API Receipt Start_ and _API Receipt Cutoff_ columns in sample schedules below.
             
        Customers with API-linked revenue will be able to confirm revenue via the Avalara MyLodgeTax application starting on the third day of the month at 01:00:00, U.S. Pacific Time. See _Customer Confirmation Start_ column in sample schedules below.
        
        If a customer does not manually confirm revenue, revenue delivered via this API endpoint will be automatically confirmed after 16:00:00, U.S. Pacific Time, on:
        
        * the fifth day of the month if any of the customer's tax returns are due the tenth day of the month or earlier
        
        * the tenth day of the month if all of the customer's tax returns are due after the tenth day of the month
        
        See _Customer Confirmation Cutoff_ column in sample schedules below.
        
        >
        
        Customer bank accounts will be debited for net tax owed during the month that the tax return is due when revenue is confirmed.  Tax returns will be filed during the same month based on jurisdiction due dates.  See _Filing & Remittal Date_ column below.
        
        >
        
        Sample schedules are as follows:
        
        ===
        
        >
        
        Jurisdictions that require monthly filing & remittance
        
        ___
        
        Transaction Date  | API Receipt Start | API Receipt Cutoff | Customer Confirmation Start | Customer Confirmation Cutoff  | Filing & Remittal Date  
        
        ----------------  | ----------------- | ----------------------- | ---------------------  | ----------------------------  | ----------------------  
        
        2019-01-**        | 2019-01-01        | 2019-02-02      | 2019-02-03                  | 2019-02-05 or 2019-02-10      | 2019-02-05 thru 2019-02-25
        
        2019-02-**        | 2019-02-01        | 2019-03-02      | 2019-03-03                  | 2019-03-05 or 2019-03-10      | 2019-03-05 thru 2019-03-25
        
        ...               | ...               | ...             | ...                         | ...                              | ...
        
        2019-11-**        | 2019-11-01        | 2019-12-02      | 2019-12-03                  | 2019-12-05 or 2019-12-10      | 2019-12-05 thru 2019-12-25
        
        2019-12-**        | 2019-12-01        | 2020-01-02      | 2020-01-03                  | 2020-01-05 or 2020-01-10      | 2020-01-05 thru 2020-01-25
        
        >
        
        Jurisdictions that require quarterly filing & remittance (filing dates for sample jurisdiction fiscal year starting January 1; note that some jurisdictions' fiscal years do not start in January)
        
        ___
        
        Transaction Date  | API Receipt Start | API Receipt Cutoff | Customer Confirmation Start | Customer Confirmation Cutoff  | Filing & Remittal Date  
        
        ----------------  | ----------------- | ----------------------- | ---------------------  | ----------------------------  | ----------------------  
        
        2019-01-**        | 2019-01-01        | 2019-02-02      | 2019-02-03                  | 2019-02-05 or 2019-02-10      | 2019-04-05 thru 2019-04-25
        
        2019-02-**        | 2019-02-01        | 2019-03-02      | 2019-03-03                  | 2019-03-05 or 2019-03-10      | 2019-04-05 thru 2019-04-25
        
        2019-03-**        | 2019-03-01        | 2019-04-02      | 2019-04-03                  | 2019-04-05 or 2019-04-10      | 2019-04-05 thru 2019-04-25
        
        2019-04-**        | 2019-04-01        | 2019-05-02      | 2019-05-03                  | 2019-05-05 or 2019-05-10      | 2019-07-05 thru 2019-07-25
        
        2019-05-**        | 2019-05-01        | 2019-06-02      | 2019-06-03                  | 2019-06-05 or 2019-06-10      | 2019-07-05 thru 2019-07-25
        
        2019-06-**        | 2019-06-01        | 2019-07-02      | 2019-07-03                  | 2019-07-05 or 2019-07-10      | 2019-07-05 thru 2019-07-25
        
        ...               | ...               | ...             | ...                         | ...                              | ...
        
        2019-10-**        | 2019-10-01        | 2019-11-02      | 2019-11-03                  | 2019-11-05 or 2019-11-10      | 2020-01-05 thru 2020-01-25
        
        2019-11-**        | 2019-11-01        | 2019-12-02      | 2019-12-03                  | 2019-12-05 or 2019-12-10      | 2020-01-05 thru 2020-01-25
        
        2019-12-**        | 2019-12-01        | 2020-01-02      | 2020-01-03                  | 2020-01-05 or 2020-01-10      | 2020-01-05 thru 2020-01-25

        >
        
        Jurisdictions that require annual filing & remittance (filing dates for sample jurisdiction fiscal year starting January 1; note that some jurisdictions' fiscal years do not start in January)
        
        ___
        
        Transaction Date  | API Receipt Start | API Receipt Cutoff | Customer Confirmation Start | Customer Confirmation Cutoff  | Filing & Remittal Date  
        
        ----------------  | ----------------- | ----------------------- | ---------------------  | ----------------------------  | ----------------------  
        
        2019-01-**        | 2019-01-01        | 2019-02-02      | 2019-02-03                  | 2019-02-05 or 2019-02-10      | 2020-01-05 thru 2020-01-25
        
        2019-02-**        | 2019-02-01        | 2019-03-02      | 2019-03-03                  | 2019-03-05 or 2019-03-10      | 2020-01-05 thru 2020-01-25
        
        ...               | ...               | ...             | ...                         | ...                              | ...
        
        2019-11-**        | 2019-11-01        | 2019-12-02      | 2019-12-03                  | 2019-12-05 or 2019-12-10      | 2020-01-05 thru 2020-01-25
        
        2019-12-**        | 2019-12-01        | 2020-01-02      | 2020-01-03                  | 2020-01-05 or 2020-01-10      | 2020-01-05 thru 2020-01-25"
        
      consumes:
        - application/json
      parameters:
        - name: locationid
          in: path
          required: true
          type: string
          description: Unique location identifier assigned when posting a partnerLead
            (_locationId_).
        - name: transactionid
          in: path
          required: true
          type: string
          description: Partner-defined unique identifier for a revenue transaction.
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/PutRevenueTransactionsRequest'
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad request: check response body message for details'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Location Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: The given transactionId is already associated with another property
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: The provided location id is for an inactive location  -OR- the
            transaction date in the request-body is outside the  current
            reporting-period.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Exceeded API Rate Limits
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
    get:
      tags:
        - Revenue
      summary: Retrieves reported revenue information for a given location by  its
        transaction id.
      description: Returns a revenue transaction for the specified location and transaction id. If there is no such transaction
        for the given location, a '(404) Not Found' error will be returned.
      consumes:
        - application/json
      parameters:
        - name: locationid
          in: path
          required: true
          type: string
          description: Unique location identifier assigned when posting a partnerLead
            (_locationId_).
        - name: transactionid
          in: path
          required: true
          type: string
          description: Partner-defined unique identifier for a revenue transaction.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetRevenueTransactionsResponse'
        '400':
          description: 'Bad request: check response body message for details'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Transaction data not found for the given location
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
    delete:
      tags:
        - Revenue
      summary: Deletes revenue information that was previously entered for the  given
        location and transaction id.
      description: Allows for the deletion of a revenue transaction that has previously been
        entered for a location.

        Note that revenue data that was reported in the prior reporting month (or earlier) 
        cannot be deleted.  For example, a transaction with a March transaction date cannot be deleted after April 2.
      consumes:
        - application/json
      parameters:
        - name: locationid
          in: path
          required: true
          type: string
          description: Unique location identifier assigned when posting a partnerLead
            (_locationId_).
        - name: transactionid
          in: path
          required: true
          type: string
          description: Partner-defined unique identifier for a revenue transaction.
      responses:
        '204':
          description: No Content
        '404':
          description: Location Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: Requested transaction is for a prior reporting period.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Exceeded API Rate Limits
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Unknown Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - authorizer: []
securityDefinitions:
  authorizer:
    type: apiKey
    name: Authorization
    in: header
